import { Component, OnInit } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { WebSocketService } from '../../services/web-socket.service';


@Component({
  selector: 'app-conversation',
  templateUrl: './conversation.component.html',
  styleUrls: ['./conversation.component.css']
})
export class ConversationComponent implements OnInit {
  message: any;
  messages: { groupId: string, message: string , timestamp: string, img: string}[] = [];
  groupId: string = '';
  imageURL: string | ArrayBuffer | null = null;
  parsedMessage: any;
  img: string = '';
  imageUrl: string | null = null;
  imageUrlParts: string[] = [];


  constructor(
    private webSocketService: WebSocketService,
    private activatedRoute: ActivatedRoute
  ) {}

  ngOnInit() {
      this.activatedRoute.params.subscribe(params => {
      this.groupId = params['groupId'];
    });

    this.webSocketService.getMessage().subscribe((msg: any) => {
       // Add message to the array
      console.log("message recu");
//si le message est un message normal
      try {
        this.parsedMessage = JSON.parse(msg);
        console.log('Le message est un JSON :', this.parsedMessage);
      } catch (error) {
        console.log('Le message n\'est pas un JSON :', msg);
      }
      this.messages.push(this.parsedMessage);
      console.log(this.messages);
//si le message est une
      this.imageUrlParts.push(msg);
      this.imageUrl = this.imageUrlParts.join('');
      console.log(this.imageUrl);
      

    });

    }

    onFileSelected(event: any) {
      const file: File = event.target.files[0];
      console.log(file);
    
      const fileDetailsAsString = JSON.stringify({
        name: file.name,
        size: file.size,
        type: file.type,
        lastModified: file.lastModified,
      });
      
      console.log("image file : ",fileDetailsAsString);
      this.img = fileDetailsAsString;
      
      // Vérification du type de fichier
      if (file.type.startsWith('image/')) {
        const reader = new FileReader();
        reader.onload = () => {
          this.imageUrl = reader.result as string;
          console.log("url de l'image : ", this.imageUrl);
    
          // Diviser l'URL de l'image en 100 parties
          const chunkSize = Math.ceil(this.imageUrl.length / 100);
          for (let i = 0; i < this.imageUrl.length; i += chunkSize) {
            const chunk = this.imageUrl.slice(i, i + chunkSize);
            // Envoyer chaque partie à travers la socket

            const messageObject = {
              groupId: this.groupId,
              message: this.message,
              timestamp: new Date().toLocaleTimeString(),
              img: chunk
            };
            const messageJson = JSON.stringify(messageObject);
            this.webSocketService.sendMessage(messageJson);
          }
        };
        // Lecture du contenu du fichier en tant que chaîne de caractères base64
        reader.readAsDataURL(file);
      } else {
        console.error('Le fichier sélectionné n\'est pas une image.');
        // Affichez un message d'erreur ou effectuez une action appropriée
      }
    }
    

  sendMessage() {
    const messageObject = {
      groupId: this.groupId,
      message: this.message,
      timestamp: new Date().toLocaleTimeString(),
      img: this.imageUrl
    };

    const messageJson = JSON.stringify(messageObject);
    this.webSocketService.sendMessage(messageJson);

    this.message = '';
  }
}
